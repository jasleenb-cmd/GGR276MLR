import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import statsmodels.api as sm
from statsmodels.stats.outliers_influence import variance_inflation_factor
from scipy import stats

data = pd.read_csv('/Users/jasleenbinning/PycharmProjects/Fun/GGR276MLR/working276.csv')
data = data.dropna()

# Replace 'Economic Freedom Summary Index' with your target variable
# Replace 'Size of Government', 'Protection of property rights', etc. with your independent variables
sns.pairplot(data, x_vars=['Size of Government', 'Protection of property rights', 'Sound Money', 'Freedom to trade internationally', 'Labor market regulations'], y_vars=['Economic Freedom Summary Index'], kind='reg', plot_kws={'line_kws':{'color':'red'}})
plt.show()

# Fit the multiple linear regression model
X = data[['Size of Government', 'Protection of property rights', 'Sound Money', 'Freedom to trade internationally', 'Labor market regulations']]
X = sm.add_constant(X)
y = data['Economic Freedom Summary Index']

model = sm.OLS(y, X).fit()
residuals = model.resid

# Check for normality using a histogram and QQ plot
plt.figure(figsize=(12, 6))

plt.subplot(121)
sns.histplot(residuals, kde=True)
plt.xlabel('Residuals')

plt.subplot(122)
sm.qqplot(residuals, line='45', fit=True, alpha=0.3)
plt.xlabel('Theoretical Quantiles')
plt.ylabel('Sample Quantiles')
plt.title('Normality (QQ Plot)')
plt.show()


# Plot residuals vs. fitted values
fitted_values = model.fittedvalues
plt.scatter(fitted_values, residuals)
plt.xlabel('Fitted Values')
plt.ylabel('Residuals')
plt.title('homoscedasticity')
plt.show()

# Calculate Variance Inflation Factor (VIF)
vif = pd.DataFrame()
vif['Features'] = X.columns
vif['VIF'] = [variance_inflation_factor(X.values, i) for i in range(X.shape[1])]
print(vif)

# Get Durbin-Watson test statistic
durbin_watson_stat = sm.stats.stattools.durbin_watson(residuals)
print(f'Durbin-Watson test statistic: {durbin_watson_stat}')
